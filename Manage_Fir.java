/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frame.fir;

import frame.fir.Manage_Fir;
import frame.background_processing.WindowAction;
import frame.home.Home_Admin;
import mainconnection.MainConnection;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import object.Fir;

/**
 *
 * @author PREDATOR
 */
public class Manage_Fir extends WindowAction {

    public static final ArrayList<Fir> arrFir = new ArrayList<Fir>();
    public static final Connection connCrimeFile = MainConnection.getConnection();

    /**
     * Creates new form Manage_Fir
     */
    public Manage_Fir() {
        dataArrayListFromFir();
        initComponents();
        loadDataArrayListToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbManageFir = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbFir = new javax.swing.JTable();
        pnControlFIR = new javax.swing.JPanel();
        lbControlFIR = new javax.swing.JLabel();
        lbSuspectName = new javax.swing.JLabel();
        lbLocation = new javax.swing.JLabel();
        lbDescription = new javax.swing.JLabel();
        lbEvidence = new javax.swing.JLabel();
        lbDateOfOccurence = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        txtSuspectName = new javax.swing.JTextField();
        txtEvidence = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        cbbDay = new javax.swing.JComboBox<>();
        cbbMonth = new javax.swing.JComboBox<>();
        cbbYear = new javax.swing.JComboBox<>();
        lbLogo = new javax.swing.JLabel();
        btnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(220, 220, 220));
        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 660));

        lbManageFir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo/logo_fir.png"))); // NOI18N

        txtSearch.setBackground(new java.awt.Color(245, 245, 245));
        txtSearch.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSearch.setText("Search");
        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchFocusLost(evt);
            }
        });
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        tbFir.setBackground(new java.awt.Color(204, 204, 204));
        tbFir.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        tbFir.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FIR ID", "Suspect Name", "Location", "Description", "Date Of Occurence", "Evidence", "Admin ID"
            }
        ));
        tbFir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbFirMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbFir);

        pnControlFIR.setBackground(new java.awt.Color(204, 204, 204));
        pnControlFIR.setPreferredSize(new java.awt.Dimension(1078, 239));

        lbControlFIR.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lbControlFIR.setText("Control FIR");

        lbSuspectName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbSuspectName.setText("Suspect Name");

        lbLocation.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbLocation.setText("Location");

        lbDescription.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbDescription.setText("Description");

        lbEvidence.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbEvidence.setText("Evidence");

        lbDateOfOccurence.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbDateOfOccurence.setText("Date Of Occurence");

        txtLocation.setBackground(new java.awt.Color(220, 220, 220));
        txtLocation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLocationFocusLost(evt);
            }
        });

        txtDescription.setBackground(new java.awt.Color(220, 220, 220));
        txtDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescriptionFocusLost(evt);
            }
        });

        txtSuspectName.setBackground(new java.awt.Color(220, 220, 220));
        txtSuspectName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSuspectNameFocusLost(evt);
            }
        });

        txtEvidence.setBackground(new java.awt.Color(220, 220, 220));
        txtEvidence.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEvidenceFocusLost(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(51, 153, 0));
        btnCreate.setForeground(new java.awt.Color(51, 153, 0));
        btnCreate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button/create-button.png"))); // NOI18N
        btnCreate.setMaximumSize(new java.awt.Dimension(95, 31));
        btnCreate.setPreferredSize(new java.awt.Dimension(100, 30));
        btnCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCreateMouseClicked(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(51, 204, 255));
        btnUpdate.setForeground(new java.awt.Color(0, 204, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button/update_button.png"))); // NOI18N
        btnUpdate.setPreferredSize(new java.awt.Dimension(100, 30));
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setForeground(new java.awt.Color(255, 0, 51));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button/delete-button.png"))); // NOI18N
        btnDelete.setPreferredSize(new java.awt.Dimension(100, 30));
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(51, 51, 51));
        btnReset.setForeground(new java.awt.Color(51, 51, 51));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button/reset_button.png"))); // NOI18N
        btnReset.setPreferredSize(new java.awt.Dimension(100, 30));
        btnReset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnResetMouseClicked(evt);
            }
        });

        cbbDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        cbbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        cbbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050" }));

        javax.swing.GroupLayout pnControlFIRLayout = new javax.swing.GroupLayout(pnControlFIR);
        pnControlFIR.setLayout(pnControlFIRLayout);
        pnControlFIRLayout.setHorizontalGroup(
            pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnControlFIRLayout.createSequentialGroup()
                .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnControlFIRLayout.createSequentialGroup()
                        .addGap(435, 435, 435)
                        .addComponent(lbControlFIR)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnControlFIRLayout.createSequentialGroup()
                        .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnControlFIRLayout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbLocation)
                                    .addComponent(lbDescription))
                                .addGap(38, 38, 38))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnControlFIRLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lbSuspectName)
                                .addGap(18, 18, 18)))
                        .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSuspectName, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(txtDescription)
                            .addComponent(txtLocation))
                        .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnControlFIRLayout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbDateOfOccurence)
                                    .addComponent(lbEvidence))
                                .addGap(18, 18, 18)
                                .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEvidence, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnControlFIRLayout.createSequentialGroup()
                                        .addComponent(cbbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cbbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnControlFIRLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnControlFIRLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );
        pnControlFIRLayout.setVerticalGroup(
            pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnControlFIRLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbControlFIR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnControlFIRLayout.createSequentialGroup()
                        .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnControlFIRLayout.createSequentialGroup()
                                .addComponent(lbLocation)
                                .addGap(35, 35, 35)
                                .addComponent(lbDescription))
                            .addGroup(pnControlFIRLayout.createSequentialGroup()
                                .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbEvidence)
                                    .addGroup(pnControlFIRLayout.createSequentialGroup()
                                        .addComponent(lbDateOfOccurence)
                                        .addGap(57, 57, 57))
                                    .addGroup(pnControlFIRLayout.createSequentialGroup()
                                        .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cbbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addComponent(txtEvidence, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(21, 21, 21)
                                .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnControlFIRLayout.createSequentialGroup()
                        .addGroup(pnControlFIRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbSuspectName)
                            .addComponent(txtSuspectName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(140, 140, 140))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnControlFIRLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        lbLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo/logo.png"))); // NOI18N
        lbLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbLogoMouseClicked(evt);
            }
        });

        btnReturn.setBackground(new java.awt.Color(220, 220, 220));
        btnReturn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button/btn_return.png"))); // NOI18N
        btnReturn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReturnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnReturn)
                .addGap(384, 384, 384)
                .addComponent(lbManageFir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addComponent(lbLogo))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnControlFIR, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1068, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbLogo)
                                .addGap(0, 33, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lbManageFir)))
                        .addGap(8, 8, 8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnReturn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnControlFIR, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateMouseClicked
        int selectRow = tbFir.getSelectedRow();

        String suspectName = txtSuspectName.getText();
        String location = txtLocation.getText();
        String description = txtDescription.getText();
        String evidence = txtEvidence.getText();

        String dayStr = cbbDay.getSelectedItem().toString();
        String monthStr = cbbMonth.getSelectedItem().toString();
        String yearStr = cbbYear.getSelectedItem().toString();

        //parse string to int
        int day = Integer.parseInt(dayStr);
        int month = Integer.parseInt(monthStr);
        int year = Integer.parseInt(yearStr);

        //check date month
        LocalDate date = LocalDate.of(year, month, 1);
        if (day < 1 || day > date.lengthOfMonth()) {
            JOptionPane.showMessageDialog(null, "Date invalid", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        date = LocalDate.of(year, month, day);

        try {
            Statement staCreateFir = connCrimeFile.createStatement();
            ResultSet rsCreateFir = staCreateFir.executeQuery("SELECT TOP 1 FirID FROM FIR ORDER BY FirID DESC");

            int maxFirID = 0;
            if (rsCreateFir.next()) {
                String maxFirIDStr = rsCreateFir.getString("FirID");
                maxFirID = Integer.parseInt(maxFirIDStr.substring(3));
            }

            String nextFirID = "Fir" + String.format("%03d", maxFirID + 1);

            PreparedStatement preCreateFir = connCrimeFile.prepareStatement("INSERT INTO FIR (FirID, SuspectName, Location, Description, DateOfOccurence, Evidence) VALUES (?,?,?,?,?,?)");
            preCreateFir.setString(1, nextFirID);
            preCreateFir.setString(2, suspectName);
            preCreateFir.setString(3, location);
            preCreateFir.setString(4, description);
            preCreateFir.setDate(5, java.sql.Date.valueOf(date));
            preCreateFir.setString(6, evidence);
            preCreateFir.executeUpdate();

            rsCreateFir.close();
            preCreateFir.close();
            JOptionPane.showMessageDialog(null, "Create successful", "Success", JOptionPane.INFORMATION_MESSAGE);

            DefaultTableModel model = (DefaultTableModel) tbFir.getModel();
            model.setValueAt(suspectName, selectRow, 1);
            model.setValueAt(location, selectRow, 2);
            model.setValueAt(description, selectRow, 3);
            model.setValueAt(date, selectRow, 4);
            model.setValueAt(evidence, selectRow, 5);

            tbFir.setModel(model);
        } catch (SQLException ex) {
            System.out.println("Error create " + ex);
        }
    }//GEN-LAST:event_btnCreateMouseClicked

    private void txtSuspectNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSuspectNameFocusLost
        JTextField textField = (JTextField) evt.getSource();
        if (textField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "SuspectName not empty !");
            textField.requestFocus();
        }
    }//GEN-LAST:event_txtSuspectNameFocusLost

    private void txtLocationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLocationFocusLost
        JTextField textField = (JTextField) evt.getSource();
        if (textField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Location not empty !");
            textField.requestFocus();
        }
    }//GEN-LAST:event_txtLocationFocusLost

    private void txtDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescriptionFocusLost
        JTextField textField = (JTextField) evt.getSource();
        if (textField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Description not empty !");
            textField.requestFocus();
        }
    }//GEN-LAST:event_txtDescriptionFocusLost

    private void txtEvidenceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEvidenceFocusLost
        JTextField textField = (JTextField) evt.getSource();
        if (textField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Evidence not empty !");
            textField.requestFocus();
        }
    }//GEN-LAST:event_txtEvidenceFocusLost

    private void tbFirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbFirMouseClicked
        DefaultTableModel model = (DefaultTableModel) tbFir.getModel();
        int selectIndex = tbFir.getSelectedRow();
        txtSuspectName.setText(model.getValueAt(selectIndex, 1).toString());
        txtLocation.setText(model.getValueAt(selectIndex, 2).toString());
        txtDescription.setText(model.getValueAt(selectIndex, 3).toString());
        java.sql.Date dateValue = (java.sql.Date) model.getValueAt(selectIndex, 4);
        txtEvidence.setText(model.getValueAt(selectIndex, 5).toString());

        LocalDate localDate = dateValue.toLocalDate();

        int day = localDate.getDayOfMonth();
        int month = localDate.getMonthValue();
        int year = localDate.getYear();

        cbbDay.setSelectedItem(String.valueOf(day));
        cbbMonth.setSelectedItem(String.valueOf(month));
        cbbYear.setSelectedItem(String.valueOf(year));
    }//GEN-LAST:event_tbFirMouseClicked

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        int confirmResult = JOptionPane.showConfirmDialog(null, "You sure want to update ?", "Confirm Update", JOptionPane.YES_NO_OPTION);

        if (confirmResult == JOptionPane.YES_OPTION) {
            int selectRow = tbFir.getSelectedRow();
            String firID = tbFir.getValueAt(selectRow, 0).toString();
            String suspectName = txtSuspectName.getText();
            String location = txtLocation.getText();
            String description = txtDescription.getText();
            String evidence = txtEvidence.getText();

            String dayStr = cbbDay.getSelectedItem().toString();
            String monthStr = cbbMonth.getSelectedItem().toString();
            String yearStr = cbbYear.getSelectedItem().toString();

            //parse string to int
            int day = Integer.parseInt(dayStr);
            int month = Integer.parseInt(monthStr);
            int year = Integer.parseInt(yearStr);

            //check date month
            LocalDate date = LocalDate.of(year, month, 1);
            if (day < 1 || day > date.lengthOfMonth()) {
                JOptionPane.showMessageDialog(null, "Date invalid", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            date = LocalDate.of(year, month, day);

            try {
                Statement staCreateFir = connCrimeFile.createStatement();
                ResultSet rsCreateFir = staCreateFir.executeQuery("SELECT TOP 1 FirID FROM FIR ORDER BY FirID DESC");

                int maxFirID = 0;
                if (rsCreateFir.next()) {
                    String maxFirIDStr = rsCreateFir.getString("FirID");
                    maxFirID = Integer.parseInt(maxFirIDStr.substring(3));
                }

                String nextFirID = "Fir" + String.format("%03d", maxFirID + 1);

                PreparedStatement preUpdateFir = connCrimeFile.prepareStatement("Update FIR Set SuspectName = ?, Location = ?, "
                               + "Description = ?, DateOfOccurence = ?, Evidence = ? WHERE FirID = ?");
                preUpdateFir.setString(1, suspectName);
                preUpdateFir.setString(2, location);
                preUpdateFir.setString(3, description);
                preUpdateFir.setDate(4, java.sql.Date.valueOf(date));
                preUpdateFir.setString(5, evidence);
                preUpdateFir.setString(6, firID);
                preUpdateFir.executeUpdate();

                rsCreateFir.close();
                preUpdateFir.close();
                JOptionPane.showMessageDialog(null, "Update successful", "Success", JOptionPane.INFORMATION_MESSAGE);

                DefaultTableModel model = (DefaultTableModel) tbFir.getModel();
                model.setValueAt(suspectName, selectRow, 1);
                model.setValueAt(location, selectRow, 2);
                model.setValueAt(description, selectRow, 3);
                model.setValueAt(date, selectRow, 4);
                model.setValueAt(evidence, selectRow, 5);

                tbFir.setModel(model);
            } catch (SQLException ex) {
                System.out.println("Error create " + ex);
            }
        }
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked
        int rely = JOptionPane.showConfirmDialog(this, "You sure want to delete !", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (rely == JOptionPane.YES_OPTION) {
            String idColumnDelete;
            int rowDelete;
            rowDelete = tbFir.getSelectedRow();
            idColumnDelete = (String) tbFir.getValueAt(rowDelete, 0);
            System.out.println(" " + idColumnDelete);
            deleteRow(idColumnDelete);
            dataArrayListFromFir();
            loadDataArrayListToTable();
            JOptionPane.showMessageDialog(this, "Successful Delete.");
        }
    }//GEN-LAST:event_btnDeleteMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        arrFir.clear();
        try {
            String searchEnter = txtSearch.getText();
            String sqlSearch = "Select FirID, SuspectName, Location, Description, DateOfOccurence, Evidence, AdminID From FIR Where FirID Like ? Or SuspectName Like ? "
                           + "Or Location Like ? Or Description Like ? Or Evidence Like ?";
            PreparedStatement preSearch = connCrimeFile.prepareStatement(sqlSearch);
            preSearch.setString(1, "%" + searchEnter + "%");
            preSearch.setString(2, "%" + searchEnter + "%");
            preSearch.setString(3, "%" + searchEnter + "%");
            preSearch.setString(4, "%" + searchEnter + "%");
            preSearch.setString(5, "%" + searchEnter + "%");
            ResultSet rsSearch = preSearch.executeQuery();
            while (rsSearch.next()) {
                String firID = rsSearch.getString("FirID");
                String suspectName = rsSearch.getString("SuspectName");
                String location = rsSearch.getString("Location");
                String description = rsSearch.getString("Description");
                Date dateOfOccurence = rsSearch.getDate("DateOfOccurence");
                String evidence = rsSearch.getString("Evidence");
                String adminID = rsSearch.getString("AdminID");

                Fir firTable = new Fir(firID, suspectName, location, description, dateOfOccurence, evidence, adminID, "", 0, ' ', "", "", "");
                arrFir.add(firTable);
            }
            loadDataArrayListToTable();
        } catch (SQLException e) {
            System.out.println("Error search " + e);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        txtSearch.setText("");
    }//GEN-LAST:event_txtSearchMouseClicked

    private void txtSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusLost
        txtSearch.setText("Search ...");
    }//GEN-LAST:event_txtSearchFocusLost

    private void btnResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnResetMouseClicked

        txtSuspectName.setText("");
        txtLocation.setText("");
        txtDescription.setText("");
        txtEvidence.setText("");
        cbbDay.setSelectedItem(1);
        cbbMonth.setSelectedItem(1);
        cbbYear.setSelectedItem(2023);
    }//GEN-LAST:event_btnResetMouseClicked

    private void lbLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogoMouseClicked
        Home_Admin homeAdmin = new Home_Admin();
        homeAdmin.setVisible(true);
        dispose();
    }//GEN-LAST:event_lbLogoMouseClicked

    private void btnReturnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReturnMouseClicked
        Home_Admin homeAdmin = new Home_Admin();
        homeAdmin.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnReturnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manage_Fir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manage_Fir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manage_Fir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manage_Fir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manage_Fir().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbbDay;
    private javax.swing.JComboBox<String> cbbMonth;
    private javax.swing.JComboBox<String> cbbYear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbControlFIR;
    private javax.swing.JLabel lbDateOfOccurence;
    private javax.swing.JLabel lbDescription;
    private javax.swing.JLabel lbEvidence;
    private javax.swing.JLabel lbLocation;
    private javax.swing.JLabel lbLogo;
    private javax.swing.JLabel lbManageFir;
    private javax.swing.JLabel lbSuspectName;
    private javax.swing.JPanel pnControlFIR;
    private static javax.swing.JTable tbFir;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtEvidence;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSuspectName;
    // End of variables declaration//GEN-END:variables

    private void dataArrayListFromFir() {
        arrFir.clear();
        try {
            Statement staFir = connCrimeFile.createStatement();
            ResultSet rsFir = staFir.executeQuery("SELECT FirID, SuspectName, Location, Description, DateOfOccurence, Evidence, AdminID FROM FIR");
            System.out.println("FirID\tSuspectName\tLocation\tDescription\tDateOfOccurence\tEvidence\tAdminID");
            while (rsFir.next()) {
                String firID = rsFir.getString("FirID");
                String suspectName = rsFir.getString("SuspectName");
                String location = rsFir.getString("Location");
                String description = rsFir.getString("Description");
                Date dateOfOccurence = rsFir.getDate("DateOfOccurence");
                String evidence = rsFir.getString("Evidence");
                String adminID = rsFir.getString("AdminID");

                Fir firTable = new Fir(firID, suspectName, location, description, dateOfOccurence, evidence, adminID, "", 0, ' ', "", "", "");
                arrFir.add(firTable);
            }
        } catch (SQLException e) {
            System.out.println("Error retrieving data from FIR: " + e);
        }
    }

    private void loadDataArrayListToTable() {
        DefaultTableModel model = (DefaultTableModel) Manage_Fir.tbFir.getModel();
        model.setRowCount(0);

        for (Fir fir : arrFir) {
            model.addRow(new Object[]{fir.getFirID(), fir.getSuspectName(), fir.getLocation(), fir.getDescription(), fir.getDateofOccurence(), fir.getEvidence(), fir.getAdminID()});
        }
    }

    private void deleteRow(String idColumnDelete) {
        int rows = 0;
        try {
            String sqlDelete = "Delete From FIR Where FirID = ?";
            PreparedStatement preDelete = connCrimeFile.prepareStatement(sqlDelete);
            preDelete.setString(1, idColumnDelete);
            rows = preDelete.executeUpdate();
            if (rows >= 1) {
                System.out.println("Successful Delete");
            } else {
                System.out.println(rows + "Failed");
            }
            preDelete.close();
        } catch (SQLException e) {
            System.out.println("Error delete row" + e);
        }
    }
}
